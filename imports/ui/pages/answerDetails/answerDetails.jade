template(name="answerDetails")
	.container
		if Template.subscriptionsReady
			with answer
				a#return.waves-effect.waves-light.btn {{_ "return"}}
				.card
					.card-content
						if title
							span.card-title {{_ "title"}} : #{title}
							p {{_ "answerNumberLevel"}} : #{level}
						else
							span.card-title {{_ "answerNumberLevel"}} #{level}
						if type
							p {{_ "answerType"}} : #{type}
						p {{_"answerLevel"}} : #{answerLevel}
						.input-field
							input#title.validate(type="text" required value="#{title}")
							label.active(for="title") {{_ "title"}}
						.input-field
							input#level.validate(type="number" step="1" min="1" required value="#{level}")
							label.active(for="level") {{_ "level"}}
						.input-field
							textarea#lowAnswer.materialize-textarea.validate #{lowAnswer}
							label.active(for="lowAnswer") {{_ "lowAnswer"}}
						if notYesNoAnswer
							.input-field
								textarea#midAnswer.materialize-textarea.validate #{midAnswer}
								label.active(for="midAnswer") {{_ "midAnswer"}}
						.input-field
							textarea#highAnswer.materialize-textarea.validate #{highAnswer}
							label.active(for="highAnswer") {{_ "highAnswer"}}
					.card-action
						a#updateAnswer.waves-effect.waves-light.btn {{_ "validate"}}
				ul.collection.with-header
					li.collection-header
						h6
							strong {{_ "questionsLinkedToAnswerAndOther"}}
					if answerForGroup
						each answersIdLinked
							with answerData
								li.collection-item #{title} ({{_ "level"}} : #{level})
									a.removeFromAnswerLinked.secondary-content(href="#!")
										i.material-icons cancel
						each lowerLevelAnswer
							li.collection-item #{title} ({{_ "level"}} : #{level})
								a.addToAnswersLinked.secondary-content(href="#!")
									i.material-icons check
					else
						each questionsIdLinked
							with question
								li.collection-item #{title} ({{_ "level"}} : #{level})
									a.removeFromAnswer.secondary-content(href="#!")
										i.material-icons cancel
						each questionNotInAnswer
							li.collection-item #{title} ({{_ "level"}} : #{level})
								a.addToAnswer.secondary-content(href="#!")
									i.material-icons check
		else
			+loader