template(name="questionDetails")
	.container
		if Template.subscriptionsReady
			with question
				a#return.waves-effect.waves-light.btn {{_ "return"}}
				.card.hoverable
					.card-content
						span.card-title #{title}
						.input-field
							label.active(for="title") {{_ "title"}}
							input#title.validate(type="text" value="#{title}")
						.input-field
							label.active(for="level") {{_ "level"}}
							input#level.validate(type="number" step="1" min="1" value="#{level}")
						p {{_ "displayType"}} : #{displayType}
					.card-action
						a#updateQuestion.waves-effect.waves-light.btn(href="#") {{_ "save"}}
				if rangeQuestion
					+collectionOfChoices
				if yesNoQuestion
					+collectionOfChoices
				if qcmQuestion
					.card.hoverable
						.card-content
							a#addChoice.waves-effect.waves-light.btn.right(href="#") {{_ "addChoice"}}
							span.card-title {{_ "questionChoices"}}
							.row
								each choices
									.col.s6
										.card
											.card-content
												.input-field
													if label
														label.active(for="label-#{choiceId}") {{_ "choiceLabel"}}
													else
														label(for="label-#{choiceId}") {{_ "choiceLabel"}}
													input.validate(id="label-#{choiceId}" type="text" required value="#{label}")
												.input-field
													if qcmPoints
														label.active(for="qcm-#{choiceId}") {{_ "choiceQCMPoints"}}
													else
														label(for="qcm-#{choiceId}") {{_ "choiceQCMPoints"}}
													input.validate(id="qcm-#{choiceId}" type="number" min="1" step="1" max="3" required value="#{qcmPoints}")
											.card-action
												a.saveChoice.waves-effect.waves-light.btn(href="#") {{_ "save"}}
		else
			+loader

template(name="collectionOfChoices")
	ul.collection.with-header
		li.collection-header
			h6
				strong {{_ "questionChoices"}}
		each choices
			li.collection-item #{label}